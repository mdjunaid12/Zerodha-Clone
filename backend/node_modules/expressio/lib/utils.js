"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ndtk = _interopRequireDefault(require("ndtk"));

var _isString = _interopRequireDefault(require("lodash/isString"));

var _isPlainObject = _interopRequireDefault(require("lodash/isPlainObject"));

var _joi = _interopRequireDefault(require("@hapi/joi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Utility Functions
 *
 * @copyright Copyright (c) 2017, hugw.io
 * @author Hugo W - contact@hugw.io
 * @license MIT
 */

/**
 * Helper for loading
 * app and default config objects
 */
const config = (name, defaults) => _ndtk.default.config(_ndtk.default.req(name), _ndtk.default.req(defaults));
/**
 * Validate object schemas
 * using Joi validator
 */


const sanitize = (object, schema, message) => {
  // Ensure schema is a valid Joi object
  _ndtk.default.assert(schema && schema.isJoi, 'Sanitize error: schema provided is not a valid Joi schema'); // Ensure object is valid


  _ndtk.default.assert((0, _isPlainObject.default)(object), 'Sanitize error: object provided is not valid');

  const result = _joi.default.validate(object, schema, {
    stripUnknown: true
  });

  const errMessage = (0, _isString.default)(message) ? message : 'Invalid config';
  if (result.error) _ndtk.default.assert(false, `${errMessage}: ${result.error.details[0].message}`);
  return result.value;
};

var _default = {
  config,
  sanitize
};
exports.default = _default;
//# sourceMappingURL=utils.js.map