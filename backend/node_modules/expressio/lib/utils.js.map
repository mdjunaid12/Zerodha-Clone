{"version":3,"sources":["../src/utils.js"],"names":["config","name","defaults","ndtk","req","sanitize","object","schema","message","assert","isJoi","result","Joi","validate","stripUnknown","errMessage","error","details","value"],"mappings":";;;;;;;AAQA;;AACA;;AACA;;AACA;;;;AAXA;;;;;;;;AAaA;;;;AAIA,MAAMA,MAAM,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoBC,cAAKH,MAAL,CAAYG,cAAKC,GAAL,CAASH,IAAT,CAAZ,EAA4BE,cAAKC,GAAL,CAASF,QAAT,CAA5B,CAAnC;AAEA;;;;;;AAIA,MAAMG,QAAQ,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,KAA6B;AAC5C;AACAL,gBAAKM,MAAL,CAAYF,MAAM,IAAIA,MAAM,CAACG,KAA7B,EAAoC,2DAApC,EAF4C,CAI5C;;;AACAP,gBAAKM,MAAL,CAAY,4BAAcH,MAAd,CAAZ,EAAmC,8CAAnC;;AAEA,QAAMK,MAAM,GAAGC,aAAIC,QAAJ,CAAaP,MAAb,EAAqBC,MAArB,EAA6B;AAAEO,IAAAA,YAAY,EAAE;AAAhB,GAA7B,CAAf;;AACA,QAAMC,UAAU,GAAG,uBAASP,OAAT,IAAoBA,OAApB,GAA8B,gBAAjD;AAEA,MAAIG,MAAM,CAACK,KAAX,EAAkBb,cAAKM,MAAL,CAAY,KAAZ,EAAoB,GAAEM,UAAW,KAAIJ,MAAM,CAACK,KAAP,CAAaC,OAAb,CAAqB,CAArB,EAAwBT,OAAQ,EAArE;AAElB,SAAOG,MAAM,CAACO,KAAd;AACD,CAbD;;eAee;AAAElB,EAAAA,MAAF;AAAUK,EAAAA;AAAV,C","sourcesContent":["/**\n * Utility Functions\n *\n * @copyright Copyright (c) 2017, hugw.io\n * @author Hugo W - contact@hugw.io\n * @license MIT\n */\n\nimport ndtk from 'ndtk'\nimport isString from 'lodash/isString'\nimport isPlainObject from 'lodash/isPlainObject'\nimport Joi from '@hapi/joi'\n\n/**\n * Helper for loading\n * app and default config objects\n */\nconst config = (name, defaults) => ndtk.config(ndtk.req(name), ndtk.req(defaults))\n\n/**\n * Validate object schemas\n * using Joi validator\n */\nconst sanitize = (object, schema, message) => {\n  // Ensure schema is a valid Joi object\n  ndtk.assert(schema && schema.isJoi, 'Sanitize error: schema provided is not a valid Joi schema')\n\n  // Ensure object is valid\n  ndtk.assert(isPlainObject(object), 'Sanitize error: object provided is not valid')\n\n  const result = Joi.validate(object, schema, { stripUnknown: true })\n  const errMessage = isString(message) ? message : 'Invalid config'\n\n  if (result.error) ndtk.assert(false, `${errMessage}: ${result.error.details[0].message}`)\n\n  return result.value\n}\n\nexport default { config, sanitize }\n"],"file":"utils.js"}