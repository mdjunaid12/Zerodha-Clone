{"version":3,"sources":["../../src/logger/output.js"],"names":["timestamp","info","date","Date","toISOString","chalk","grey","level","lvl","color","error","red","warn","yellow","green","verbose","blue","debug","cyan","silly","magenta","format","combine","printf","message"],"mappings":";;;;;;;AAQA;;AACA;;;;;;;;;;AAEA,MAAMA,SAAS,GAAG,qBAAQC,IAAD,IAAU;AACjC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,2BAAYH,IAAZ;AAAkBD,IAAAA,SAAS,EAAEK,eAAMC,IAAN,CAAWJ,IAAX;AAA7B;AACD,CAHiB,CAAlB;AAKA,MAAMK,KAAK,GAAG,qBAAQN,IAAD,IAAU;AAC7B,QAAM;AAAEM,IAAAA,KAAK,EAAEC;AAAT,MAAiBP,IAAvB;AAEA,QAAMQ,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAEL,eAAMM,GADD;AAEZC,IAAAA,IAAI,EAAEP,eAAMQ,MAFA;AAGZZ,IAAAA,IAAI,EAAEI,eAAMS,KAHA;AAIZC,IAAAA,OAAO,EAAEV,eAAMW,IAJH;AAKZC,IAAAA,KAAK,EAAEZ,eAAMa,IALD;AAMZC,IAAAA,KAAK,EAAEd,eAAMe;AAND,GAAd;AASA,2BAAYnB,IAAZ;AAAkBM,IAAAA,KAAK,EAAEE,KAAK,CAACD,GAAD,CAAL,CAAY,IAAGA,GAAI,GAAnB;AAAzB;AACD,CAba,CAAd;AAeA;;;;;;eAKea,gBAAOC,OAAP,CACbtB,SAAS,EADI,EAEbO,KAAK,EAFQ,EAIb;AACAc,gBAAOE,MAAP,CAActB,IAAI,IAAK,GAAEA,IAAI,CAACD,SAAU,IAAGC,IAAI,CAACM,KAAM,IAAGN,IAAI,CAACuB,OAAQ,EAAtE,CALa,C","sourcesContent":["/**\n * Logger output\n *\n * @copyright Copyright (c) 2019, hugw.io\n * @author Hugo W - contact@hugw.io\n * @license MIT\n */\n\nimport { format } from 'winston'\nimport chalk from 'chalk'\n\nconst timestamp = format((info) => {\n  const date = new Date().toISOString()\n  return { ...info, timestamp: chalk.grey(date) }\n})\n\nconst level = format((info) => {\n  const { level: lvl } = info\n\n  const color = {\n    error: chalk.red,\n    warn: chalk.yellow,\n    info: chalk.green,\n    verbose: chalk.blue,\n    debug: chalk.cyan,\n    silly: chalk.magenta,\n  }\n\n  return { ...info, level: color[lvl](`[${lvl}]`) }\n})\n\n/**\n * Default Winston\n * formatter which includes\n * colored timestamp, level and final message\n */\nexport default format.combine(\n  timestamp(),\n  level(),\n\n  // Print message\n  format.printf(info => `${info.timestamp} ${info.level} ${info.message}`),\n)\n"],"file":"output.js"}