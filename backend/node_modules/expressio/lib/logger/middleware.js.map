{"version":3,"sources":["../../src/logger/middleware.js"],"names":["req","res","next","logger","app","startTime","Date","end","chunk","encoding","method","payload","body","path","originalUrl","url","time","status","statusCode","size","_headers","type","logLevel","info","warn","error","isReq","response"],"mappings":";;;;;;;AAAA;;;;;;;eAQe,CAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaH,GAAG,CAACI,GAAvB;AAEA,QAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAUN,GAAhB;;AACAA,EAAAA,GAAG,CAACM,GAAJ,GAAU,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC7BR,IAAAA,GAAG,CAACM,GAAJ,GAAUA,GAAV;AACAN,IAAAA,GAAG,CAACM,GAAJ,CAAQC,KAAR,EAAeC,QAAf;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAaV,GAAnB;AACA,UAAMW,OAAO,GAAGX,GAAG,CAACY,IAApB;AACA,UAAMC,IAAI,GAAGb,GAAG,CAACc,WAAJ,IAAmBd,GAAG,CAACe,GAApC;AACA,UAAMC,IAAI,GAAG,IAAIV,IAAJ,KAAaD,SAA1B;AACA,UAAMY,MAAM,GAAGhB,GAAG,CAACiB,UAAnB;AACA,UAAMC,IAAI,GAAGlB,GAAG,CAACmB,QAAJ,CAAa,gBAAb,CAAb,CAT6B,CASe;;AAC5C,UAAMC,IAAI,GAAGpB,GAAG,CAACmB,QAAJ,CAAa,cAAb,CAAb,CAV6B,CAUa;;AAC1C,UAAMR,IAAI,GAAGJ,KAAb;AAEA,QAAIc,QAAQ,GAAGnB,MAAM,CAACoB,IAAtB;AACA,QAAIN,MAAM,IAAI,GAAd,EAAmBK,QAAQ,GAAGnB,MAAM,CAACqB,IAAlB;AACnB,QAAIP,MAAM,IAAI,GAAd,EAAmBK,QAAQ,GAAGnB,MAAM,CAACsB,KAAlB;AAEnBH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,KAAK,EAAE,IADA;AAEPhB,MAAAA,MAFO;AAGPG,MAAAA,IAHO;AAIPI,MAAAA,MAJO;AAKPD,MAAAA,IALO;AAMPG,MAAAA,IANO;AAOPE,MAAAA,IAPO;AAQPV,MAAAA,OARO;AASPgB,MAAAA,QAAQ,EAAEf;AATH,KAAD,CAAR;AAWD,GA5BD;;AA8BAV,EAAAA,IAAI;AACL,C","sourcesContent":["/**\n * Logger Middleware\n *\n * @copyright Copyright (c) 2017, hugw.io\n * @author Hugo W - contact@hugw.io\n * @license MIT\n */\n\nexport default (req, res, next) => {\n  const { logger } = req.app\n\n  const startTime = new Date()\n\n  const { end } = res\n  res.end = (chunk, encoding) => {\n    res.end = end\n    res.end(chunk, encoding)\n\n    const { method } = req\n    const payload = req.body\n    const path = req.originalUrl || req.url\n    const time = new Date() - startTime\n    const status = res.statusCode\n    const size = res._headers['content-length'] // eslint-disable-line\n    const type = res._headers['content-type'] // eslint-disable-line\n    const body = chunk\n\n    let logLevel = logger.info\n    if (status >= 400) logLevel = logger.warn\n    if (status >= 500) logLevel = logger.error\n\n    logLevel({\n      isReq: true,\n      method,\n      path,\n      status,\n      time,\n      size,\n      type,\n      payload,\n      response: body,\n    })\n  }\n\n  next()\n}\n"],"file":"middleware.js"}