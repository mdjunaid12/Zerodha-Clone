{"version":3,"sources":["../../src/logger/initializer.js"],"names":["schema","Joi","object","level","string","required","silent","boolean","prettify","transports","file","console","server","config","utils","sanitize","core","logger","instance","winston","createLogger","format","output","add","Console","File","filename","env","reduce","acc","cur","args","strings","map","arg","join","use","middleware"],"mappings":";;;;;;;AAQA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA;;;;AAIA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACxBC,EAAAA,KAAK,EAAEF,aAAIG,MAAJ,GAAaC,QAAb,EADiB;AACQ;AAChCC,EAAAA,MAAM,EAAEL,aAAIM,OAAJ,GAAcF,QAAd,EAFgB;AAGxBG,EAAAA,QAAQ,EAAEP,aAAIM,OAAJ,GAAcF,QAAd,EAHc;AAIxBI,EAAAA,UAAU,EAAER,aAAIC,MAAJ,CAAW;AACrBQ,IAAAA,IAAI,EAAET,aAAIM,OAAJ,GAAcF,QAAd,EADe;AAErBM,IAAAA,OAAO,EAAEV,aAAIM,OAAJ,GAAcF,QAAd;AAFY,GAAX,EAGTA,QAHS;AAJY,CAAX,CAAf;;eAUgBO,MAAD,IAAY;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,MAAnB;;AAEA,QAAM;AACJT,IAAAA,KADI;AAEJG,IAAAA,MAFI;AAGJE,IAAAA,QAHI;AAIJC,IAAAA;AAJI,MAKFK,eAAMC,QAAN,CAAeF,MAAM,CAACG,IAAP,CAAYC,MAA3B,EAAmCjB,MAAnC,EAA2C,uBAA3C,CALJ,CAHyB,CAUzB;;;AACA,QAAMkB,QAAQ,GAAGC,OAAO,CAACC,YAAR,CAAqB;AACpCjB,IAAAA,KAAK,EAAE,MAD6B;AAEpCkB,IAAAA,MAAM,EAAEC;AAF4B,GAArB,CAAjB,CAXyB,CAgBzB;;AACA,MAAIb,UAAU,CAACE,OAAf,EAAwB;AACtBO,IAAAA,QAAQ,CAACK,GAAT,CAAa,IAAIJ,OAAO,CAACV,UAAR,CAAmBe,OAAvB,EAAb;AACD,GAnBwB,CAqBzB;;;AACA,MAAIf,UAAU,CAACC,IAAf,EAAqB;AACnBQ,IAAAA,QAAQ,CAACK,GAAT,CAAa,IAAIJ,OAAO,CAACV,UAAR,CAAmBgB,IAAvB,CAA4B;AAAEC,MAAAA,QAAQ,EAAG,QAAOd,MAAM,CAACe,GAAI;AAA/B,KAA5B,CAAb;AACD,GAxBwB,CA0BzB;;;AACAT,EAAAA,QAAQ,CAACf,KAAT,GAAiBA,KAAjB;AACAe,EAAAA,QAAQ,CAACZ,MAAT,GAAkBA,MAAlB,CA5ByB,CA8BzB;;AACAM,EAAAA,MAAM,CAACK,MAAP;AACEC,IAAAA,QADF;AAEET,IAAAA,UAAU,EAAEU,OAAO,CAACV;AAFtB,KAGK,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,SAA1B,EAAqC,OAArC,EAA8C,OAA9C,EAAuDmB,MAAvD,CAA8D,CAACC,GAAD,EAAMC,GAAN,uBAC5DD,GAD4D;AAE/D,KAACC,GAAD,GAAO,CAAC,GAAGC,IAAJ,KAAa;AAClB,YAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,CAASC,GAAG,IAAI,wBAAUA,GAAV,EAAe;AAAE1B,QAAAA;AAAF,OAAf,CAAhB,CAAhB;AACAU,MAAAA,QAAQ,CAACY,GAAD,CAAR,CAAcE,OAAO,CAACG,IAAR,CAAa,GAAb,CAAd;AACD;AAL8D,IAA9D,EAMC,EAND,CAHL,EA/ByB,CA2CzB;;AACAvB,EAAAA,MAAM,CAACwB,GAAP,CAAWC,mBAAX;AACD,C","sourcesContent":["/**\n * Logger initializer\n *\n * @copyright Copyright (c) 2017, hugw.io\n * @author Hugo W - contact@hugw.io\n * @license MIT\n */\n\nimport * as winston from 'winston'\nimport Joi from '@hapi/joi'\n\nimport utils from '@/utils'\nimport formatter from './formatter'\nimport middleware from './middleware'\nimport output from './output'\n\n/**\n * Object schemas\n * to validate configuration\n */\nconst schema = Joi.object({\n  level: Joi.string().required(), // @TODO Allow only npm level strings\n  silent: Joi.boolean().required(),\n  prettify: Joi.boolean().required(),\n  transports: Joi.object({\n    file: Joi.boolean().required(),\n    console: Joi.boolean().required(),\n  }).required(),\n})\n\nexport default (server) => {\n  const { config } = server\n\n  const {\n    level,\n    silent,\n    prettify,\n    transports,\n  } = utils.sanitize(config.core.logger, schema, 'Invalid Logger config')\n\n  // Setup Winston logger instance\n  const instance = winston.createLogger({\n    level: 'info',\n    format: output,\n  })\n\n  // Setup console transport\n  if (transports.console) {\n    instance.add(new winston.transports.Console())\n  }\n\n  // Setup file transport\n  if (transports.file) {\n    instance.add(new winston.transports.File({ filename: `logs/${server.env}.log` }))\n  }\n\n  // Setup Winston configs\n  instance.level = level\n  instance.silent = silent\n\n  // Expose Logger API to the server object\n  server.logger = {\n    instance,\n    transports: winston.transports,\n    ...['error', 'warn', 'info', 'verbose', 'silly', 'debug'].reduce((acc, cur) => ({\n      ...acc,\n      [cur]: (...args) => {\n        const strings = args.map(arg => formatter(arg, { prettify }))\n        instance[cur](strings.join(' '))\n      },\n    }), {}),\n  }\n\n  // Log request/response info\n  server.use(middleware)\n}\n"],"file":"initializer.js"}